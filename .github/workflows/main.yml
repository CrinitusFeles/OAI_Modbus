name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Python Poetry
      uses: abatilo/actions-poetry@v2.1.0
      with:
        poetry-version: 1.1.4
    - name: Configure poetry
      shell: bash
      run: python -m poetry config virtualenvs.in-project true
    
    - name: Build project # This would actually build your project, using zip for an example artifact
      run: poetry build
    - name: Check folder
      run: |
        ls
        cd dist 
        ls
        cd ../
      

    - name: View poetry version
      run: poetry --version
    - name: Install dependencies
      run: |
        python -m poetry install
    
    - name: Automatic Releases
      id: create_release
      uses: marvinpinto/action-automatic-releases@v1.1.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        title: "Development Build"
        draft: false
        prerelease: true


